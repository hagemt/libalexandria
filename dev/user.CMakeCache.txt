#    This file is part of libalexandria.
#
#    libalexandria is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Lesser General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    libalexandria is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Lesser General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public License
#    along with libalexandria.  If not, see <http://www.gnu.org/licenses/>.

# This is a CMake cache template for Linux developers. See README.txt
# You can copy this file to ./user.CMakeCache.txt and modify as you like.
# Note that user.CMakeCache.txt is in ./.gitignore, but is loaded if present.

### Build options

## Global options (override any default values)

# Binding category (language interface provisions)
set(BIND_C               TRUE  CACHE BOOL "bindings +c")
set(BIND_CXX             TRUE  CACHE BOOL "bindings +cxx")
set(BIND_JAVA            TRUE  CACHE BOOL "bindings +java")
# Documentation category (automatic generation)
set(BUILD_JAVADOC        FALSE CACHE BOOL "doc +javadoc")
set(BUILD_DOXYGEN        FALSE CACHE BOOL "doc +doxygen")
#set(DOXYGEN_FORMAT_HTML  TRUE  CACHE BOOL "doxygen +html")
#set(DOXYGEN_FORMAT_MAN   TRUE  CACHE BOOL "doxygen +man")
#set(DOXYGEN_FORMAT_LATEX TRUE  CACHE BOOL "doxygen +pdf")
#set(DOXYGEN_FORMAT_RDF   TRUE  CACHE BOOL "doxygen +rdf")
#set(DOXYGEN_FORMAT_XML   TRUE  CACHE BOOL "doxygen +xml")
# Miscellaneous category (other settings)
set(BUILD_EXAMPLES       TRUE  CACHE BOOL "all +examples")
set(BUILD_SHARED_LIBS    TRUE  CACHE BOOL "all +sharedlibs")
set(BUILD_TESTING        TRUE  CACHE BOOL "all +testing")
# for SWIG settings (swagger)
set(USE_SWIG             FALSE CACHE BOOL "all +swig")
#set(SWIG_PYTHON          TRUE  CACHE BOOL "swig +python")
#set(SWIG_RUBY            TRUE  CACHE BOOL "swig +ruby")
# for Android subprojects (lannister)
set(USE_ANDROID          FALSE CACHE BOOL "java +android")
#set(ANDROID_TARGET_ARM   TRUE  CACHE BOOL "android +arm")
#set(ANDROID_TARGET_MIPS  TRUE  CACHE BOOL "android +mips")
#set(ANDROID_TARGET_X86   TRUE  CACHE BOOL "android +x86")
#set(ANDROID_DOWNLOAD_NDK TRUE  CACHE BOOL "android +ndk")
#set(ANDROID_API_LEVEL    8  CACHE  STRING "android +apilvl")

## C/C++/Fortran options

# All configurations
set(CMAKE_C_FLAGS "-Wall -Wextra" CACHE STRING "c +warnings")
set(CMAKE_CXX_FLAGS "-Wall -Wextra" CACHE STRING "cxx +warnings")
set(CMAKE_Fortran_FLAGS "-Wall -Wextra" CACHE STRING "fortran +warnings")
# Debug configurations
set(CMAKE_C_FLAGS_DEBUG       "-g -pedantic" CACHE STRING "c +dbg")
set(CMAKE_CXX_FLAGS_DEBUG     "-g -pedantic" CACHE STRING "cxx +dbg")
set(CMAKE_Fortran_FLAGS_DEBUG "-g -pedantic" CACHE STRING "fortran +dbg")

## Java options

set(JAVA_PREFIX "$ENV{HOME}/Downloads/Code/jdk1.8.0"       CACHE PATH "Effective $JAVA_HOME")
set(JAVA_LIBFIX "${JAVA_PREFIX}/jre/lib/amd64"             CACHE PATH "Location of libjava")
set(JAVA_NATIVE_INCLUDE_DIR "${JAVA_PREFIX}/include/linux" CACHE PATH "Location of (.*)_md.h")
mark_as_advanced(CLEAR JAVA_PREFIX JAVA_LIBFIX JAVA_NATIVE_INCLUDE_DIR)
# These should not require modification:
set(CMAKE_Java_ARCHIVE      "${JAVA_PREFIX}/bin/jar"          CACHE FILEPATH "CMake jar")
set(CMAKE_Java_COMPILER     "${JAVA_PREFIX}/bin/javac"        CACHE FILEPATH "CMake javac")
set(CMAKE_Java_RUNTIME      "${JAVA_PREFIX}/bin/java"         CACHE FILEPATH "CMake java")
set(JAVA_AWT_INCLUDE_PATH   "${JAVA_PREFIX}/include"          CACHE     PATH "Java AWT includes")
set(JAVA_AWT_LIBRARY        "${JAVA_LIBFIX}/libjawt.so"       CACHE FILEPATH "Java libawt/jawt")
set(JAVA_INCLUDE_PATH       "${JAVA_PREFIX}/include"          CACHE     PATH "Java global includes")
set(JAVA_INCLUDE_PATH2      "${JAVA_NATIVE_INCLUDE_DIR}"      CACHE     PATH "Java platform includes")
set(JAVA_JVM_LIBRARY        "${JAVA_LIBFIX}/server/libjvm.so" CACHE FILEPATH "Java libjvm")
set(Java_JAR_EXECUTABLE     "${JAVA_PREFIX}/bin/jar"          CACHE FILEPATH "jar command")
set(Java_JAVAC_EXECUTABLE   "${JAVA_PREFIX}/bin/javac"        CACHE FILEPATH "javac command")
set(Java_JAVADOC_EXECUTABLE "${JAVA_PREFIX}/bin/javadoc"      CACHE FILEPATH "javadoc command")
set(Java_JAVAH_EXECUTABLE   "${JAVA_PREFIX}/bin/javah"        CACHE FILEPATH "javah command")
set(Java_JAVA_EXECUTABLE    "${JAVA_PREFIX}/bin/java"         CACHE FILEPATH "java command")

# Several of these are only for advanced configurations
mark_as_advanced(FORCE
  CMAKE_C_FLAGS
  CMAKE_C_FLAGS_DEBUG
  CMAKE_CXX_FLAGS
  CMAKE_CXX_FLAGS_DEBUG
  CMAKE_Fortran_FLAGS
  CMAKE_Fortran_FLAGS_DEBUG
  CMAKE_Java_ARCHIVE
  CMAKE_Java_COMPILER
  CMAKE_Java_RUNTIME
  JAVA_AWT_INCLUDE_PATH
  JAVA_AWT_LIBRARY
  JAVA_INCLUDE_PATH
  JAVA_INCLUDE_PATH2
  JAVA_JVM_LIBRARY
  Java_JAR_EXECUTABLE
  Java_JAVA_EXECUTABLE
  Java_JAVAC_EXECUTABLE
  Java_JAVADOC_EXECUTABLE
  Java_JAVAH_EXECUTABLE
)
